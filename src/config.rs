use serde::{Deserialize, Serialize};
use std::fs::read_to_string;
lazy_static! {
    pub static ref CFG: Config = {
        let s = read_to_string("./config.toml").unwrap();
        let c: Config = toml::from_str(&s).unwrap();
        c
    };
}

#[derive(Debug, Serialize, Deserialize, Clone)]
pub struct Config {
    pub device: String,
    pub database_uri: String,
    pub database_json: String,
    pub db_wrong_json: String,
    pub daily_json: String,
    pub challenge_json: String,
    pub comments_json: String,
    pub is_user: bool,
    pub daily_forever: bool,
    pub daily_delay: u64,
    pub challenge_count: u64,
    pub challenge_delay: u64,
    pub video_column_name: String,
    pub video_count: u64,
    pub video_delay: u64,
    pub enable_article_list: bool,
    pub article_column_name: String,
    pub local_column_name: String,
    pub article_count: u64,
    pub article_delay: u64,
    pub star_share_comment: u64,
    pub keep_star_comment: bool,
    pub mumu: DeviceConfig,
    pub huawei: DeviceConfig,
}
#[derive(Debug, Serialize, Deserialize, Clone)]
pub struct DeviceConfig {
    pub is_virtual_machine: bool,
    pub xml_uri: String,
    pub host: String,
    pub port: String,
    pub rule_local_bounds: String,
    pub rule_bottom_message: String,
    pub rule_bottom_ding: String,
    pub rule_bottom_work: String,
    pub rule_bottom_contact: String,
    pub rule_bottom_mine: String,
    pub rule_bonus_entry: String,
    pub rule_quiz_entry: String,
    pub rule_quiz_exit: String,
    pub rule_daily_entry: String,
    pub rule_challenge_entry: String,
    pub rule_bonus_title: String,
    pub rule_bonus_score: String,
    pub rule_type: String,
    pub rule_content: String,
    pub rule_blank_content: String,
    pub rule_options: String,
    pub rule_radio_options_content: String,
    pub rule_edits: String,
    pub rule_score: String,
    pub rule_score_reached: String,
    pub rule_desc: String,
    pub rule_note: String,
    pub rule_back: String,
    pub rule_submit: String,
    pub rule_return: String,
    pub rule_next: String,
    pub rule_challenge_content: String,
    pub rule_challenge_options_content: String,
    pub rule_challenge_options_bounds: String,
    pub rule_judge_bounds: String,
    pub rule_revive_bounds: String,
    pub rule_again_bounds: String,
    pub rule_close_bounds: String,
    pub rule_first_video: String,
    pub rule_columns_content: String,
    pub rule_columns_bounds: String,
    pub rule_fixed_top_bounds: String,
    pub rule_fixed_bottom_bounds: String,
    pub rule_news_bounds: String,
    pub rule_news_content: String,
    pub rule_news3pic_bounds: String,
    pub rule_news3pic_content: String,
    pub rule_star_bounds: String,
    pub rule_share_bounds: String,
    pub rule_comment_bounds: String,
    pub rule_share2xuexi_bounds: String,
    pub rule_publish_bounds: String,
    pub rule_delete_bounds: String,
    pub rule_delete_confirm_bounds: String,
    pub rule_comment2_bounds: String,
}
